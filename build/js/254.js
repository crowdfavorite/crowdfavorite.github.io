"use strict";(self.webpackChunkcrowdfavorite_github_io=self.webpackChunkcrowdfavorite_github_io||[]).push([[254],{1814:(e,n,t)=>{t.d(n,{Z:()=>k});var l=t(7294),a=t(5697),r=t.n(a);const s=function(e){let{title:n}=e;return l.createElement("h1",null,n)};s.propTypes={title:r().string.isRequired};const i=s;var o=t(9655);function c(e){let{size:n,className:t,title:a,path:r}=e;const s="inline-block align-middle"+(t?` ${t}`:"");return l.createElement("i",{className:s,title:a},l.createElement("svg",{className:"micon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",height:n,width:n,fill:"currentColor"},r))}c.defaultProps={size:"24px",className:"",path:""},c.propTypes={size:r().string,className:r().string,title:r().string.isRequired,path:r().string};const m=c;function d(e){let{size:n="",className:t="",title:a=""}=e;return l.createElement(m,{size:n,className:t,title:a,path:l.createElement("path",{d:"M6 19h3v-6h6v6h3v-9l-6-4.5L6 10Zm-2 2V9l8-6 8 6v12h-7v-6h-2v6Zm8-8.75Z"})})}d.defaultProps={size:"24px",className:""},d.propTypes={size:r().string,className:r().string,title:r().string.isRequired};const u=d,p=function(){return l.createElement(o.rU,{to:"/",className:"action-link"},l.createElement(u,{title:"home",size:"20px"}),l.createElement("span",{className:"action-label"},"Home"))};function h(e){let{size:n,className:t,title:a}=e;return l.createElement(m,{size:n,className:t,title:a,path:l.createElement(l.Fragment,null,l.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),l.createElement("path",{d:"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"}))})}h.defaultProps={size:"24px",className:""},h.propTypes={size:r().string,className:r().string,title:r().string.isRequired};const g=h,v=function(e){let{url:n}=e;return l.createElement(o.rU,{className:"action-link",to:n},l.createElement(g,{title:"Next"}),l.createElement("span",{className:"action-label"},"Next"))};v.propTypes={url:r().string.isRequired};const f=v,w=function(e){let{downloadUrl:n,downloadFile:t}=e;return l.createElement("a",{className:"action-link download",href:""+("https://crowdfavorite.github.io"+n),download:t},l.createElement("i",{className:"micon micon-download micon-grey micon-xs"}),l.createElement("span",{className:"action-label"},"Download the code"))};w.propTypes={downloadUrl:r().string.isRequired,downloadFile:r().string.isRequired};const E=w,b=function(e){let{title:n,downloadUrl:t,downloadFile:a,nextUrl:r}=e;return l.createElement("div",{className:"action-bar"},n?l.createElement(i,{title:n}):null,l.createElement("div",{className:"actions"},t&&a?l.createElement(E,{downloadUrl:t,downloadFile:a}):null,l.createElement(p,null),r?l.createElement(f,{url:r}):null))};b.defaultProps={title:null,nextUrl:null,downloadUrl:null,downloadFile:null},b.propTypes={title:r().string,nextUrl:r().string,downloadUrl:r().string,downloadFile:r().string};const k=b},6254:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});var l=t(7294),a=t(8093),r=t(3366),s=t(1814);var i=t(3286);function o(){return l.createElement(l.Fragment,null,l.createElement(s.Z,{title:"Invoker",downloadUrl:"/code/patterns/invoker/invokable.php",downloadFile:"invokable.php"}),l.createElement(i.a,{style:{marginBottom:"2rem"}},l.createElement(i.a.Item,{href:"/"},"Home"),l.createElement(i.a.Item,{href:"#/patterns/invoker/invokable",selected:!0},"Invokable")),l.createElement("div",{className:"parser"},l.createElement(a.D,{rehypePlugins:[r.Z],children:"### Anatomy\nThe invokable class would benefit from a constructor to set its properties. \nThe business logic would reside in the invoke method.\n<br>\n```\nclass InvokableClass \n{   \n    private $arg1;\n    private $arg2;\n    \n    public function __construct($arg1, $arg2, ...)\n    {\n        $this->arg1 = $arg1;\n        $this->arg2 = $arg2;\n    }\n    \n    public function __invoke()\n    {\n        .\n        .\n        .\n    }\n}\n```\n\n### Initiation\n\nWe would initiate the invokable class as\n\n```\n(new InvokableClass($arg1, $arg2))();\n```\n\n### The Invoke helper\nAn invoke helper method would speed up the development by initiating an invokable class and passing a number of arguments to it.\n\n```\nfunction invoke()\n{\n    $args = func_get_args();\n\n    $className = array_shift($args);\n\n    return (new $className(...$args))();\n}\n```\n\nThe first argument of the invoke helper should be the fully qualified class name, followed by the rest of the arguments.\nA usage example of the invoke helper would be:\n\n```\ninvoke(InvokableClass::class, $arg1, $arg2);\n```\n"})),l.createElement(s.Z,null))}}}]);