"use strict";(self.webpackChunkcrowdfavorite_github_io=self.webpackChunkcrowdfavorite_github_io||[]).push([[393],{2192:(e,t,l)=>{l.d(t,{Z:()=>h});var n=l(7294);const a=e=>{let{title:t}=e;return n.createElement("h1",null,t)};var r=l(9655),o=l(5274);const c=e=>{let{size:t="24px",className:l="",title:a=""}=e;return n.createElement(o.Z,{size:t,className:l,title:a,path:n.createElement("path",{d:"M6 19h3v-6h6v6h3v-9l-6-4.5L6 10Zm-2 2V9l8-6 8 6v12h-7v-6h-2v6Zm8-8.75Z"})})},s=()=>n.createElement(r.rU,{to:"/",className:"action-link"},n.createElement(c,{title:"home",size:"20px"}),n.createElement("span",{className:"action-label"},"Home")),i=e=>{let{size:t="24px",className:l="",title:a=""}=e;return n.createElement(o.Z,{size:t,className:l,title:a,path:n.createElement(n.Fragment,null,n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"}))})},m=e=>{let{url:t}=e;return n.createElement(r.rU,{className:"action-link",to:t},n.createElement(i,{title:"Next"}),n.createElement("span",{className:"action-label"},"Next"))},u=e=>{let{size:t="24px",className:l="",title:a=""}=e;return n.createElement(o.Z,{size:t,className:l,title:a,path:n.createElement("path",{d:"M6 20q-.825 0-1.412-.587Q4 18.825 4 18v-3h2v3h12v-3h2v3q0 .825-.587 1.413Q18.825 20 18 20Zm6-4-5-5 1.4-1.45 2.6 2.6V4h2v8.15l2.6-2.6L17 11Z"})})},d=e=>{let{downloadUrl:t,downloadFile:l}=e;return n.createElement("a",{className:"action-link download",href:""+("https://crowdfavorite.github.io"+t),download:l},n.createElement(u,{size:"20px"}),n.createElement("span",{className:"action-label"},"Download the code"))},h=e=>{let{title:t,downloadUrl:l,downloadFile:r,nextUrl:o}=e;return n.createElement("div",{className:"action-bar"},t?n.createElement(a,{title:t}):null,n.createElement("div",{className:"actions"},l&&r?n.createElement(d,{downloadUrl:l,downloadFile:r}):null,n.createElement(s,null),o?n.createElement(m,{url:o}):null))}},2873:(e,t,l)=>{l.d(t,{Z:()=>m});var n=l(7294),a=l(5697),r=l.n(a),o=l(5274);const c=e=>{let{size:t="20px",className:l="",title:a="Copy to clipboard"}=e;return n.createElement(o.Z,{size:t,className:l,title:a,path:n.createElement("g",null,n.createElement("g",null,n.createElement("g",null,n.createElement("path",{d:"M16,20H4c-0.6,0-1-0.4-1-1V1c0-0.6,0.4-1,1-1h12c0.6,0,1,0.4,1,1v18C17,19.6,16.6,20,16,20z M5,18h10V2H5V18z"}))),n.createElement("g",null,n.createElement("g",null,n.createElement("path",{d:"M20,24H8c-0.6,0-1-0.4-1-1v-4c0-0.6,0.4-1,1-1s1,0.4,1,1v3h10V6h-3c-0.6,0-1-0.4-1-1s0.4-1,1-1h4c0.6,0,1,0.4,1,1v18C21,23.6,20.6,24,20,24z"}))))})},s=e=>{let{code:t}=e;return n.createElement("button",{type:"button",onClick:()=>navigator.clipboard.writeText(t[0].props.children[0]),className:"copy",title:"Copy to clipboard"},n.createElement(c,null))},i=function(e){let{children:t}=e;return n.createElement("div",{className:"relative"},n.createElement("pre",null,t),n.createElement("div",{className:"absolute top-3 right-4"},n.createElement(s,{code:t})))};i.propTypes={children:r().arrayOf(r().element).isRequired};const m=i},5274:(e,t,l)=>{l.d(t,{Z:()=>a});var n=l(7294);const a=e=>{let{size:t="24px",className:l="",title:a,path:r}=e;const o="inline-block align-middle"+(l?` ${l}`:"");return n.createElement("i",{className:o,title:a},n.createElement("svg",{className:"micon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",height:t,width:t,fill:"currentColor"},r))}},5393:(e,t,l)=>{l.r(t),l.d(t,{default:()=>s});var n=l(7294),a=l(8093),r=l(3366),o=l(2192);var c=l(2873);const s=()=>n.createElement(n.Fragment,null,n.createElement(o.Z,{title:"Web routes",nextUrl:"/laravel/web/controllers"}),n.createElement("div",{className:"parser"},n.createElement(a.D,{rehypePlugins:[r.Z],children:"Grouped in a the namespace 'Web', all the route requests are directed to the folder web located at:\n\n```\nApp > Http > Controllers > Web\n```\nA request is handled by a controller class method which returns a rendered html view.\n\n#### Web route\n```\nhttp://laravel.test/users\n```\nIn the web.php route file, we would define the route above as:\n\n```\nRoute::group(['namespace' => 'Web'], function() {\n    Route::get('/users', [RouteController::class, 'viewMethod'])->name('users.index');\n});\n```\n\nDefining the routes into nested groups is essential to allow the proper scaling of a project.\n\n#### Route nested groups\n```\nRoute::group(['namespace' => 'Web', function() {\n    \n    ... list of guest routes\n    \n    Route::group([\n        'middleware' => 'auth',\n    ], function() { \n        ... list of authenticated routes\n    });\n});\n```\n\n#### Catch all route\n\nPlaced at the end of the web routes file, a catch all route definition will be capturing all non defined route requests and routing them to a controller class.\n\n```\nRoute::get('/{method?}', function ($method = null) {\n\n        $pageController = app()->make(PageController::class);\n\n        if ($method !== null) {\n            return $pageController->{$method}();\n        }\n    });\n```\nThe catch all definition is an appropriate solution when the routing is handled by a Javascript library (Vue or React router). \n\n#### Reference\n<p class=\"m-0 mb-05\"><a class=\"link\" href=\"https://laravel.com/docs/8.x/routing\" target=\"_blank\">Laravel routing</a></p>\n\n",components:{pre:c.Z}})),n.createElement(o.Z,{nextUrl:"/laravel/web/controllers"}))}}]);