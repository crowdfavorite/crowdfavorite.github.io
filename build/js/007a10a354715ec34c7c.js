"use strict";(self.webpackChunkcrowdfavorite_github_io=self.webpackChunkcrowdfavorite_github_io||[]).push([[227],{2192:(e,t,n)=>{n.d(t,{Z:()=>u});var l=n(7294);const a=e=>{let{title:t}=e;return l.createElement("h1",null,t)};var r=n(9655),s=n(5274);const c=e=>{let{size:t="24px",className:n="",title:a=""}=e;return l.createElement(s.Z,{size:t,className:n,title:a,path:l.createElement("path",{d:"M6 19h3v-6h6v6h3v-9l-6-4.5L6 10Zm-2 2V9l8-6 8 6v12h-7v-6h-2v6Zm8-8.75Z"})})},i=()=>l.createElement(r.rU,{to:"/",className:"action-link"},l.createElement(c,{title:"home",size:"20px"}),l.createElement("span",{className:"action-label"},"Home")),o=e=>{let{size:t="24px",className:n="",title:a=""}=e;return l.createElement(s.Z,{size:t,className:n,title:a,path:l.createElement(l.Fragment,null,l.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),l.createElement("path",{d:"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"}))})},m=e=>{let{url:t}=e;return l.createElement(r.rU,{className:"action-link",to:t},l.createElement(o,{title:"Next"}),l.createElement("span",{className:"action-label"},"Next"))},h=e=>{let{size:t="24px",className:n="",title:a=""}=e;return l.createElement(s.Z,{size:t,className:n,title:a,path:l.createElement("path",{d:"M6 20q-.825 0-1.412-.587Q4 18.825 4 18v-3h2v3h12v-3h2v3q0 .825-.587 1.413Q18.825 20 18 20Zm6-4-5-5 1.4-1.45 2.6 2.6V4h2v8.15l2.6-2.6L17 11Z"})})},d=e=>{let{downloadUrl:t,downloadFile:n}=e;return l.createElement("a",{className:"action-link download",href:""+("https://crowdfavorite.github.io"+t),download:n},l.createElement(h,{size:"20px"}),l.createElement("span",{className:"action-label"},"Download the code"))},u=e=>{let{title:t,downloadUrl:n,downloadFile:r,nextUrl:s}=e;return l.createElement("div",{className:"action-bar"},t?l.createElement(a,{title:t}):null,l.createElement("div",{className:"actions"},n&&r?l.createElement(d,{downloadUrl:n,downloadFile:r}):null,l.createElement(i,null),s?l.createElement(m,{url:s}):null))}},2873:(e,t,n)=>{n.d(t,{Z:()=>m});var l=n(7294),a=n(5697),r=n.n(a),s=n(5274);const c=e=>{let{size:t="24px",className:n="",title:a="Copy to clipboard"}=e;return l.createElement(s.Z,{size:t,className:n,title:a,path:l.createElement("g",null,l.createElement("g",null,l.createElement("g",null,l.createElement("path",{d:"M16,20H4c-0.6,0-1-0.4-1-1V1c0-0.6,0.4-1,1-1h12c0.6,0,1,0.4,1,1v18C17,19.6,16.6,20,16,20z M5,18h10V2H5V18z"}))),l.createElement("g",null,l.createElement("g",null,l.createElement("path",{d:"M20,24H8c-0.6,0-1-0.4-1-1v-4c0-0.6,0.4-1,1-1s1,0.4,1,1v3h10V6h-3c-0.6,0-1-0.4-1-1s0.4-1,1-1h4c0.6,0,1,0.4,1,1v18C21,23.6,20.6,24,20,24z"}))))})},i=e=>{let{code:t}=e;return l.createElement("button",{type:"button",onClick:()=>navigator.clipboard.writeText(t[0].props.children[0]),className:"copy",title:"Copy to clipboard"},l.createElement(c,null))},o=function(e){let{children:t}=e;return l.createElement("div",{className:"relative"},l.createElement("pre",null,t),l.createElement("div",{className:"absolute top-3 right-4"},l.createElement(i,{code:t})))};o.propTypes={children:r().arrayOf(r().element).isRequired};const m=o},5274:(e,t,n)=>{n.d(t,{Z:()=>a});var l=n(7294);const a=e=>{let{size:t="24px",className:n="",title:a,path:r}=e;const s="inline-block align-middle"+(n?` ${n}`:"");return l.createElement("i",{className:s,title:a},l.createElement("svg",{className:"micon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",height:t,width:t,fill:"currentColor"},r))}},8227:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var l=n(7294),a=n(8093),r=n(3366),s=n(2192);var c=n(2873);const i=()=>l.createElement(l.Fragment,null,l.createElement(s.Z,{title:"Invoker",downloadUrl:"/assets/downloads/patterns/invoker/invokable.php",downloadFile:"invokable.php"}),l.createElement("div",{className:"parser"},l.createElement(a.D,{rehypePlugins:[r.Z],children:"### Anatomy\nThe invokable class would benefit from a constructor to set its properties. \nThe business logic would reside in the invoke method.\n<br>\n```\nclass InvokableClass \n{   \n    private $arg1;\n    private $arg2;\n    \n    public function __construct($arg1, $arg2, ...)\n    {\n        $this->arg1 = $arg1;\n        $this->arg2 = $arg2;\n    }\n    \n    public function __invoke()\n    {\n        .\n        .\n        .\n    }\n}\n```\n\n### Initiation\n\nWe would initiate the invokable class as\n\n```\n(new InvokableClass($arg1, $arg2))();\n```\n\n### The Invoke helper\nAn invoke helper method would speed up the development by initiating an invokable class and passing a number of arguments to it.\n\n```\nfunction invoke()\n{\n    $args = func_get_args();\n\n    $className = array_shift($args);\n\n    return (new $className(...$args))();\n}\n```\n\nThe first argument of the invoke helper should be the fully qualified class name, followed by the rest of the arguments.\nA usage example of the invoke helper would be:\n\n```\ninvoke(InvokableClass::class, $arg1, $arg2);\n```\n",components:{pre:c.Z}})),l.createElement(s.Z,null))}}]);