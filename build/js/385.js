"use strict";(self.webpackChunkcrowdfavorite_github_io=self.webpackChunkcrowdfavorite_github_io||[]).push([[385],{1814:(e,t,n)=>{n.d(t,{Z:()=>x});var l=n(7294),a=n(5697),r=n.n(a);const s=function(e){let{title:t}=e;return l.createElement("h1",null,t)};s.propTypes={title:r().string.isRequired};const i=s;var o=n(9655);function c(e){let{size:t,className:n,title:a,path:r}=e;const s="inline-block align-middle"+(n?` ${n}`:"");return l.createElement("i",{className:s,title:a},l.createElement("svg",{className:"micon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",height:t,width:t,fill:"currentColor"},r))}c.defaultProps={size:"24px",className:"",path:""},c.propTypes={size:r().string,className:r().string,title:r().string.isRequired,path:r().string};const u=c;function m(e){let{size:t="",className:n="",title:a=""}=e;return l.createElement(u,{size:t,className:n,title:a,path:l.createElement("path",{d:"M6 19h3v-6h6v6h3v-9l-6-4.5L6 10Zm-2 2V9l8-6 8 6v12h-7v-6h-2v6Zm8-8.75Z"})})}m.defaultProps={size:"24px",className:""},m.propTypes={size:r().string,className:r().string,title:r().string.isRequired};const p=m,d=function(){return l.createElement(o.rU,{to:"/",className:"action-link"},l.createElement(p,{title:"home",size:"20px"}),l.createElement("span",{className:"action-label"},"Home"))};function g(e){let{size:t,className:n,title:a}=e;return l.createElement(u,{size:t,className:n,title:a,path:l.createElement(l.Fragment,null,l.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),l.createElement("path",{d:"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"}))})}g.defaultProps={size:"24px",className:""},g.propTypes={size:r().string,className:r().string,title:r().string.isRequired};const h=g,f=function(e){let{url:t}=e;return l.createElement(o.rU,{className:"action-link",to:t},l.createElement(h,{title:"Next"}),l.createElement("span",{className:"action-label"},"Next"))};f.propTypes={url:r().string.isRequired};const w=f,E=function(e){let{downloadUrl:t,downloadFile:n}=e;return l.createElement("a",{className:"action-link download",href:""+("https://crowdfavorite.github.io"+t),download:n},l.createElement("i",{className:"micon micon-download micon-grey micon-xs"}),l.createElement("span",{className:"action-label"},"Download the code"))};E.propTypes={downloadUrl:r().string.isRequired,downloadFile:r().string.isRequired};const v=E,N=function(e){let{title:t,downloadUrl:n,downloadFile:a,nextUrl:r}=e;return l.createElement("div",{className:"action-bar"},t?l.createElement(i,{title:t}):null,l.createElement("div",{className:"actions"},n&&a?l.createElement(v,{downloadUrl:n,downloadFile:a}):null,l.createElement(d,null),r?l.createElement(w,{url:r}):null))};N.defaultProps={title:null,nextUrl:null,downloadUrl:null,downloadFile:null},N.propTypes={title:r().string,nextUrl:r().string,downloadUrl:r().string,downloadFile:r().string};const x=N},2385:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var l=n(7294),a=n(8093),r=n(3366),s=n(1814);var i=n(3286);function o(){return l.createElement(l.Fragment,null,l.createElement(s.Z,{title:"Api routes",nextUrl:"/laravel/api/controllers"}),l.createElement(i.a,{style:{marginBottom:"2rem"}},l.createElement(i.a.Item,{href:"/"},"Home"),l.createElement(i.a.Item,{href:"#/laravel/api/routes",selected:!0},"Api routes")),l.createElement("div",{className:"parser"},l.createElement(a.D,{rehypePlugins:[r.Z],children:"<p class=\"mx-auto fit-content p-3\"><img src=\"/assets/images/singleAction.svg\" height=\"120\"/></p>\n\nGrouped in a the namespace 'Api', all the api requests are directed to the folder api located at:\n\n```\nApp > Http > Controllers > Api\n```\n\nIn the api.php route file, we would define a route as:\n\n```\nRoute::group(['namespace' => 'Api'], function() {\n    Route::get('/paginate', [RouteController::class, 'viewMethod']);\n});\n```\n\nDefining the routes into nested groups is essential to allow the proper scaling of a project.\n\n#### Nested groups\n\n```\nRoute::group(['namespace' => 'Api', function() {\n     \n     ... non authenticated routes\n        \n     Route::group([\n        'middleware' => 'auth',\n    ], function() { \n        ... list of authenticated routes\n    \n        Route::group([\n            'middleware' => 'custom.middleware',\n            'prefix' => 'users',\n            'as' => 'users',\n        ], function() { \n            \n            Route::get('/', [UsersController::class, 'index'])->name('index');\n            \n            Route::get('/paginate', [UsersController::class, 'paginate'])->name('paginate');\n        });\n    });\n    \n    .\n    .\n    .\n});\n```\n\n#### Reference\n<p class=\"m-0 mb-05\"><a class=\"link\" href=\"https://laravel.com/docs/8.x/routing\" target=\"_blank\">Laravel routing</a></p>\n\n"})),l.createElement(s.Z,{nextUrl:"/laravel/api/controllers"}))}}}]);