"use strict";(self.webpackChunkcrowdfavorite_github_io=self.webpackChunkcrowdfavorite_github_io||[]).push([[909],{3996:(e,t,n)=>{n.d(t,{Z:()=>N});var r=n(7294),i=n(5697),l=n.n(i);const a=function(e){let{title:t}=e;return r.createElement("h1",null,t)};a.propTypes={title:l().string.isRequired};const s=a;var o=n(9655),c=n(9414);function d(e){let{size:t="",className:n="",title:i=""}=e;return r.createElement(c.Z,{size:t,className:n,title:i,path:r.createElement("path",{d:"M6 19h3v-6h6v6h3v-9l-6-4.5L6 10Zm-2 2V9l8-6 8 6v12h-7v-6h-2v6Zm8-8.75Z"})})}d.defaultProps={size:"24px",className:""},d.propTypes={size:l().string,className:l().string,title:l().string.isRequired};const p=d,u=function(){return r.createElement(o.rU,{to:"/",className:"action-link"},r.createElement(p,{title:"home",size:"20px"}),r.createElement("span",{className:"action-label"},"Home"))};function m(e){let{size:t,className:n,title:i}=e;return r.createElement(c.Z,{size:t,className:n,title:i,path:r.createElement(r.Fragment,null,r.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),r.createElement("path",{d:"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"}))})}m.defaultProps={size:"24px",className:""},m.propTypes={size:l().string,className:l().string,title:l().string.isRequired};const v=m,h=function(e){let{url:t}=e;return r.createElement(o.rU,{className:"action-link",to:t},r.createElement(v,{title:"Next"}),r.createElement("span",{className:"action-label"},"Next"))};h.propTypes={url:l().string.isRequired};const g=h,E=function(e){let{size:t="",className:n="",title:i=""}=e;return r.createElement(c.Z,{size:t,className:n,title:i,path:r.createElement("path",{d:"M6 20q-.825 0-1.412-.587Q4 18.825 4 18v-3h2v3h12v-3h2v3q0 .825-.587 1.413Q18.825 20 18 20Zm6-4-5-5 1.4-1.45 2.6 2.6V4h2v8.15l2.6-2.6L17 11Z"})})};E.defaultProps={size:"24px",className:"",title:""},E.propTypes={size:l().string,className:l().string,title:l().string};const f=E,w=function(e){let{downloadUrl:t,downloadFile:n}=e;return r.createElement("a",{className:"action-link download",href:""+("https://crowdfavorite.github.io"+t),download:n},r.createElement(f,{size:"20px"}),r.createElement("span",{className:"action-label"},"Download the code"))};w.propTypes={downloadUrl:l().string.isRequired,downloadFile:l().string.isRequired};const y=w,b=function(e){let{title:t,downloadUrl:n,downloadFile:i,nextUrl:l}=e;return r.createElement("div",{className:"action-bar"},t?r.createElement(s,{title:t}):null,r.createElement("div",{className:"actions"},n&&i?r.createElement(y,{downloadUrl:n,downloadFile:i}):null,r.createElement(u,null),l?r.createElement(g,{url:l}):null))};b.defaultProps={title:null,nextUrl:null,downloadUrl:null,downloadFile:null},b.propTypes={title:l().string,nextUrl:l().string,downloadUrl:l().string,downloadFile:l().string};const N=b},2606:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(7294),i=n(5697),l=n.n(i),a=n(9414);const s=function(e){let{size:t=""}=e;return r.createElement(a.Z,{size:t,title:"Copy to clipboard",path:r.createElement("g",null,r.createElement("g",null,r.createElement("g",null,r.createElement("path",{d:"M16,20H4c-0.6,0-1-0.4-1-1V1c0-0.6,0.4-1,1-1h12c0.6,0,1,0.4,1,1v18C17,19.6,16.6,20,16,20z M5,18h10V2H5V18z"}))),r.createElement("g",null,r.createElement("g",null,r.createElement("path",{d:"M20,24H8c-0.6,0-1-0.4-1-1v-4c0-0.6,0.4-1,1-1s1,0.4,1,1v3h10V6h-3c-0.6,0-1-0.4-1-1s0.4-1,1-1h4c0.6,0,1,0.4,1,1v18C21,23.6,20.6,24,20,24z"}))))})};s.defaultProps={size:"24px"},s.propTypes={size:l().string};const o=s,c=function(e){let{code:t}=e;return r.createElement("button",{type:"button",onClick:()=>navigator.clipboard.writeText(t[0].props.children[0]),className:"code-copy-btn",title:"Copy to clipboard"},r.createElement(o,null))};c.propTypes={code:l().arrayOf(l().element).isRequired};const d=c,p=function(e){let{children:t}=e;return r.createElement("div",{className:"relative"},r.createElement("pre",null,t),r.createElement("div",{className:"absolute top-3 right-4"},r.createElement(d,{code:t})))};p.propTypes={children:l().arrayOf(l().element).isRequired};const u=p},9414:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(7294),i=n(5697),l=n.n(i);function a(e){let{size:t,className:n,title:i,path:l}=e;const a="inline-block align-middle"+(n?` ${n}`:"");return r.createElement("i",{className:a,title:i},r.createElement("svg",{className:"micon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",height:t,width:t,fill:"currentColor"},l))}a.defaultProps={size:"24px",className:"",path:""},a.propTypes={size:l().string,className:l().string,title:l().string.isRequired,path:l().element};const s=a},3909:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n(7294),i=n(8093),l=n(3366),a=n(3996);var s=n(2606);function o(){return r.createElement(r.Fragment,null,r.createElement(a.Z,{title:"Plugin",nextUrl:"/wordpress/plugin/dependency"}),r.createElement("div",{className:"parser"},r.createElement(i.D,{rehypePlugins:[l.Z],children:"### Service providers\n\nService providers are classes which are used to bind entities to the container.\nThey allow the packaging of a code or configurations that are reused regularly.\nThe bound entities could be services, initiated classes, arrays ... etc ...  \nThe entities will be resolved from the container by calling app('entity') or app()->get('entity');\n\n#### Anatomy of a service provider\n\n```\nnamespace Boilerplate\\Providers;\n\nuse Core\\Providers\\AppServiceProvider;\n\nclass AnotherServiceProvider extends AppServiceProvider\n{\n\t/**\n\t * @var array\n\t */\n\tprotected $provides = [\n\t\t'entity',\n\t];\n\n\t/**\n\t * Container registration method\n\t */\n\tpublic function register()\n\t{\n\n\t\t$this->getContainer()->add('entity', 'value');\n\t}\n\n```\n\nThe service provider 'provides' method declare in an array what it can provide. The 'provides' array lists the keys available in the container.\nIn addition it benefit from a register method where the function add binds an entity and its value to the container.\n\n\n#### Examples of bindings\n\n<b>Binding a class</b>  \n\n```\nnamespace Boilerplate\\Providers;\n\nuse Boilerplate\\Controllers\\ViewController;\nuse Core\\Providers\\AppServiceProvider;\n\nclass ViewServiceProvider extends AppServiceProvider\n{\n    /**\n     * @var array\n     */\n    protected $provides = [\n        'view',\n    ];\n        \n    /**\n     * Container registration method\n     */\n    public function register()\n    {\n        $this->getContainer()->add('view', fn () => new ViewController());\n    }\n}\n```\n\nThe usage will be\n```\napp('view')->method();\n```\n\n<b>Binding a service</b>  \n\n```\nnamespace Boilerplate\\Providers;\n\nuse GuzzleHttp\\Client;\nuse Core\\Providers\\AppServiceProvider;\n\nclass GuzzleServiceProvider extends AppServiceProvider\n\n    /**\n     * @var array\n     */\n    protected $provides = [\n        'http',\n    ];\n    \n    /**\n     * Container registration method\n     */\n    public function register()\n    {   \n        $this->getContainer()->add('http', function() => {\n            return new Client([\n                'base_uri' => 'url_to_my_api',\n                ... additional configs\n            ]);\n        });\n    }\n}\n```\n\nThe usage will be\n```\napp('http')->get(....);\n```\n",components:{pre:s.Z}})),r.createElement(a.Z,{nextUrl:"/wordpress/plugin/dependency"}))}}}]);