"use strict";(self.webpackChunkcrowdfavorite_github_io=self.webpackChunkcrowdfavorite_github_io||[]).push([[999],{9052:(e,t,n)=>{n.d(t,{Z:()=>z});var l=n(7294),s=n(5697),a=n.n(s);const r=function(e){let{title:t}=e;return l.createElement("h1",null,t)};r.propTypes={title:a().string.isRequired};const i=r;var o=n(9655);function c(e){let{size:t,className:n,title:s,path:a}=e;const r="inline-block align-middle"+(n?` ${n}`:"");return l.createElement("i",{className:r,title:s},l.createElement("svg",{className:"micon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",height:t,width:t,fill:"currentColor"},a))}c.defaultProps={size:"24px",className:"",path:""},c.propTypes={size:a().string,className:a().string,title:a().string.isRequired,path:a().string};const p=c;function d(e){let{size:t="",className:n="",title:s=""}=e;return l.createElement(p,{size:t,className:n,title:s,path:l.createElement("path",{d:"M6 19h3v-6h6v6h3v-9l-6-4.5L6 10Zm-2 2V9l8-6 8 6v12h-7v-6h-2v6Zm8-8.75Z"})})}d.defaultProps={size:"24px",className:""},d.propTypes={size:a().string,className:a().string,title:a().string.isRequired};const m=d,h=function(){return l.createElement(o.rU,{to:"/",className:"action-link"},l.createElement(m,{title:"home",size:"20px"}),l.createElement("span",{className:"action-label"},"Home"))};function u(e){let{size:t,className:n,title:s}=e;return l.createElement(p,{size:t,className:n,title:s,path:l.createElement(l.Fragment,null,l.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),l.createElement("path",{d:"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"}))})}u.defaultProps={size:"24px",className:""},u.propTypes={size:a().string,className:a().string,title:a().string.isRequired};const f=u,g=function(e){let{url:t}=e;return l.createElement(o.rU,{className:"action-link",to:t},l.createElement(f,{title:"Next"}),l.createElement("span",{className:"action-label"},"Next"))};g.propTypes={url:a().string.isRequired};const w=g,v=function(e){let{size:t="",className:n="",title:s=""}=e;return l.createElement(p,{size:t,className:n,title:s,path:l.createElement("path",{d:"M6 20q-.825 0-1.412-.587Q4 18.825 4 18v-3h2v3h12v-3h2v3q0 .825-.587 1.413Q18.825 20 18 20Zm6-4-5-5 1.4-1.45 2.6 2.6V4h2v8.15l2.6-2.6L17 11Z"})})};v.defaultProps={size:"24px",className:""},v.propTypes={size:a().string,className:a().string,title:a().string.isRequired};const b=v,E=function(e){let{downloadUrl:t,downloadFile:n}=e;return l.createElement("a",{className:"action-link download",href:""+("https://crowdfavorite.github.io"+t),download:n},l.createElement(b,{size:"20px"}),l.createElement("span",{className:"action-label"},"Download the code"))};E.propTypes={downloadUrl:a().string.isRequired,downloadFile:a().string.isRequired};const N=E,P=function(e){let{title:t,downloadUrl:n,downloadFile:s,nextUrl:a}=e;return l.createElement("div",{className:"action-bar"},t?l.createElement(i,{title:t}):null,l.createElement("div",{className:"actions"},n&&s?l.createElement(N,{downloadUrl:n,downloadFile:s}):null,l.createElement(h,null),a?l.createElement(w,{url:a}):null))};P.defaultProps={title:null,nextUrl:null,downloadUrl:null,downloadFile:null},P.propTypes={title:a().string,nextUrl:a().string,downloadUrl:a().string,downloadFile:a().string};const z=P},3999:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var l=n(7294),s=n(8093),a=n(3366),r=n(9052);function i(){return l.createElement(l.Fragment,null,l.createElement(r.Z,{title:"Php CS Sniffer"}),l.createElement("div",{className:"parser"},l.createElement(s.D,{rehypePlugins:[a.Z],children:'PHP_CodeSniffer is a set of two PHP scripts; the main phpcs script that tokenizes PHP, JavaScript and CSS files to detect violations of a defined coding standard.\n\n## Installation\n\nThe installation and configuration of the package are detailed below\n\n### Composer\n```\ncomposer require --dev "squizlabs/php_codesniffer=*"\ncomposer require --dev wp-coding-standards/wpcs\n```\nIn composer.json the following script should be added \n```\n"phpcs": "phpcs --standard=phpcs.xml"\n```\nAnd then run composer update.\n\nTo make CodeSniffer aware of the added coding standard, type on the console terminal \n```\nvendor/bin/phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs\n```\n### PhpStorm\n\nIn PhpStormâ€™s preferences php quality tools menu \n<br>\nPhpStorm > Languages & Frameworks > PHP > Quality Tools\n<br>\nPoint to  PHP CodeSniffer located at\n<br>\nvendor > squizlabs > php_codesniffer > bin > phpcs\n<br>\nThen click on the validate button.\n\nWordpress mainly follows PSR-12 however you can download a custom ruleset from\n<br>\n<p class="m-0 mb-05"><a class="link" href="/assets/downloads/style/phpcs.xml" download="phpcs.xml">Wordpress preset</a></p>\n\nIn the php code sniffer inspection options choose custom as ruleset and point to the file phpcs.xml placed at the root of the project folder.\n\n\n### References\n<p class="m-0 mb-05"><a class="link" href="https://www.jetbrains.com/help/phpstorm/using-php-code-sniffer.html#enabling-tool-inspection" target="_blank">PhpStorm documentation</a></p>\n<p class="m-0 mb-05"><a class="link" href="https://github.com/squizlabs/PHP_CodeSniffer" target="_blank">Code sniffer Github</a></p>\n'})),l.createElement(r.Z,null))}}}]);